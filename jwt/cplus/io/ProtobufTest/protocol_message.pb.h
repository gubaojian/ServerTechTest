// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protocol_message.proto
// Protobuf C++ Version: 6.32.0-dev

#ifndef protocol_5fmessage_2eproto_2epb_2eh
#define protocol_5fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protocol_5fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protocol_5fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_protocol_5fmessage_2eproto;
}  // extern "C"
namespace wsg {
namespace gateway {
namespace protocol {
class PackMessage;
struct PackMessageDefaultTypeInternal;
extern PackMessageDefaultTypeInternal _PackMessage_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PackMessage_class_data_;
}  // namespace protocol
}  // namespace gateway
}  // namespace wsg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace wsg {
namespace gateway {
namespace protocol {

// ===================================================================


// -------------------------------------------------------------------

class PackMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wsg.gateway.protocol.PackMessage) */ {
 public:
  inline PackMessage() : PackMessage(nullptr) {}
  ~PackMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PackMessage* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PackMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PackMessage(::google::protobuf::internal::ConstantInitialized);

  inline PackMessage(const PackMessage& from) : PackMessage(nullptr, from) {}
  inline PackMessage(PackMessage&& from) noexcept
      : PackMessage(nullptr, ::std::move(from)) {}
  inline PackMessage& operator=(const PackMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackMessage& operator=(PackMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackMessage& default_instance() {
    return *reinterpret_cast<const PackMessage*>(
        &_PackMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PackMessage& a, PackMessage& b) { a.Swap(&b); }
  inline void Swap(PackMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackMessage* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PackMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PackMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PackMessage& from) { PackMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PackMessage* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wsg.gateway.protocol.PackMessage"; }

 protected:
  explicit PackMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PackMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PackMessage& from);
  PackMessage(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PackMessage&& from) noexcept
      : PackMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWsgIdFieldNumber = 1,
    kConnIdFieldNumber = 2,
    kActionFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kMsgFieldNumber = 5,
  };
  // bytes wsgId = 1;
  void clear_wsgid() ;
  const ::std::string& wsgid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_wsgid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_wsgid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_wsgid();
  void set_allocated_wsgid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_wsgid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_wsgid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_wsgid();

  public:
  // bytes connId = 2;
  void clear_connid() ;
  const ::std::string& connid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_connid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_connid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_connid();
  void set_allocated_connid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_connid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_connid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_connid();

  public:
  // bytes action = 3;
  void clear_action() ;
  const ::std::string& action() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_action();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_action();
  void set_allocated_action(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_action() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_action(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_action();

  public:
  // bytes appId = 4;
  void clear_appid() ;
  const ::std::string& appid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_appid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_appid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_appid();
  void set_allocated_appid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_appid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_appid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_appid();

  public:
  // bytes msg = 5;
  void clear_msg() ;
  const ::std::string& msg() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_msg();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_msg();
  void set_allocated_msg(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_msg() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_msg(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:wsg.gateway.protocol.PackMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PackMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr wsgid_;
    ::google::protobuf::internal::ArenaStringPtr connid_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr appid_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protocol_5fmessage_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PackMessage_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PackMessage

// bytes wsgId = 1;
inline void PackMessage::clear_wsgid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wsgid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PackMessage::wsgid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wsg.gateway.protocol.PackMessage.wsgId)
  return _internal_wsgid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PackMessage::set_wsgid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.wsgid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wsg.gateway.protocol.PackMessage.wsgId)
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::mutable_wsgid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_wsgid();
  // @@protoc_insertion_point(field_mutable:wsg.gateway.protocol.PackMessage.wsgId)
  return _s;
}
inline const ::std::string& PackMessage::_internal_wsgid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wsgid_.Get();
}
inline void PackMessage::_internal_set_wsgid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.wsgid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::_internal_mutable_wsgid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.wsgid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PackMessage::release_wsgid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wsg.gateway.protocol.PackMessage.wsgId)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.wsgid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.wsgid_.Set("", GetArena());
  }
  return released;
}
inline void PackMessage::set_allocated_wsgid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.wsgid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.wsgid_.IsDefault()) {
    _impl_.wsgid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wsg.gateway.protocol.PackMessage.wsgId)
}

// bytes connId = 2;
inline void PackMessage::clear_connid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PackMessage::connid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wsg.gateway.protocol.PackMessage.connId)
  return _internal_connid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PackMessage::set_connid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.connid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wsg.gateway.protocol.PackMessage.connId)
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::mutable_connid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_connid();
  // @@protoc_insertion_point(field_mutable:wsg.gateway.protocol.PackMessage.connId)
  return _s;
}
inline const ::std::string& PackMessage::_internal_connid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connid_.Get();
}
inline void PackMessage::_internal_set_connid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.connid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::_internal_mutable_connid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.connid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PackMessage::release_connid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wsg.gateway.protocol.PackMessage.connId)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.connid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.connid_.Set("", GetArena());
  }
  return released;
}
inline void PackMessage::set_allocated_connid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.connid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connid_.IsDefault()) {
    _impl_.connid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wsg.gateway.protocol.PackMessage.connId)
}

// bytes action = 3;
inline void PackMessage::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& PackMessage::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wsg.gateway.protocol.PackMessage.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PackMessage::set_action(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.action_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wsg.gateway.protocol.PackMessage.action)
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:wsg.gateway.protocol.PackMessage.action)
  return _s;
}
inline const ::std::string& PackMessage::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void PackMessage::_internal_set_action(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.action_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.action_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PackMessage::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wsg.gateway.protocol.PackMessage.action)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.action_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.action_.Set("", GetArena());
  }
  return released;
}
inline void PackMessage::set_allocated_action(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wsg.gateway.protocol.PackMessage.action)
}

// bytes appId = 4;
inline void PackMessage::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& PackMessage::appid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wsg.gateway.protocol.PackMessage.appId)
  return _internal_appid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PackMessage::set_appid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.appid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wsg.gateway.protocol.PackMessage.appId)
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::mutable_appid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_appid();
  // @@protoc_insertion_point(field_mutable:wsg.gateway.protocol.PackMessage.appId)
  return _s;
}
inline const ::std::string& PackMessage::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_.Get();
}
inline void PackMessage::_internal_set_appid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.appid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::_internal_mutable_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.appid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PackMessage::release_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wsg.gateway.protocol.PackMessage.appId)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.appid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.appid_.Set("", GetArena());
  }
  return released;
}
inline void PackMessage::set_allocated_appid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.appid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.appid_.IsDefault()) {
    _impl_.appid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wsg.gateway.protocol.PackMessage.appId)
}

// bytes msg = 5;
inline void PackMessage::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& PackMessage::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wsg.gateway.protocol.PackMessage.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PackMessage::set_msg(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wsg.gateway.protocol.PackMessage.msg)
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::mutable_msg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:wsg.gateway.protocol.PackMessage.msg)
  return _s;
}
inline const ::std::string& PackMessage::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void PackMessage::_internal_set_msg(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.msg_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PackMessage::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.msg_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PackMessage::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wsg.gateway.protocol.PackMessage.msg)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.msg_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.msg_.Set("", GetArena());
  }
  return released;
}
inline void PackMessage::set_allocated_msg(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wsg.gateway.protocol.PackMessage.msg)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace gateway
}  // namespace wsg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // protocol_5fmessage_2eproto_2epb_2eh
