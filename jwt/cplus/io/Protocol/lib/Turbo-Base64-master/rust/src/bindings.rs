/* automatically generated by rust-bindgen 0.64.0  */

pub const TB64_VERSION : u32 = 100 ;
pub type wchar_t = :: std :: os :: raw :: c_int ; # [repr (C)] # [repr (align (16))] # [derive (Debug , Copy , Clone)]
pub struct max_align_t {
pub __clang_max_align_nonce1 : :: std :: os :: raw :: c_longlong ,
pub __bindgen_padding_0 : u64 ,
pub __clang_max_align_nonce2 : u128 , } # [test] fn bindgen_test_layout_max_align_t () { const UNINIT : :: std :: mem :: MaybeUninit < max_align_t > = :: std :: mem :: MaybeUninit :: uninit () ; let ptr = UNINIT . as_ptr () ;
 assert_eq ! (:: std :: mem :: size_of :: < max_align_t > () , 32usize , concat ! ("Size of: " , stringify ! (max_align_t))) ;
 assert_eq ! (:: std :: mem :: align_of :: < max_align_t > () , 16usize , concat ! ("Alignment of " , stringify ! (max_align_t))) ;
 assert_eq ! (unsafe { :: std :: ptr :: addr_of ! ((* ptr) . __clang_max_align_nonce1) as usize - ptr as usize } , 0usize , concat ! ("Offset of field: " , stringify ! (max_align_t) , "::" , stringify ! (__clang_max_align_nonce1))) ;
 assert_eq ! (unsafe { :: std :: ptr :: addr_of ! ((* ptr) . __clang_max_align_nonce2) as usize - ptr as usize } , 16usize , concat ! ("Offset of field: " , stringify ! (max_align_t) , "::" , stringify ! (__clang_max_align_nonce2))) ; }
extern "C" { pub fn tb64enclen (inlen : usize) -> usize ; }
extern "C" { pub fn tb64declen (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize) -> usize ; }
extern "C" { pub fn tb64enc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64dec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; } pub type TB64FUNC = :: std :: option :: Option < unsafe extern "C" fn (in_ : * const :: std :: os :: raw :: c_uchar , n : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize > ; extern "C" { pub static mut _tb64e : TB64FUNC ; } extern "C" { pub static mut _tb64d : TB64FUNC ; }
extern "C" { pub fn tb64senc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64sdec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64xenc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64xdec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v128enc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v128dec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v128aenc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v128adec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v256enc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v256dec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v512enc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64v512dec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn tb64ini (id : :: std :: os :: raw :: c_uint , isshort : :: std :: os :: raw :: c_uint) ; }
extern "C" { pub fn _tb64v256enc (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn _tb64v256dec (in_ : * const :: std :: os :: raw :: c_uchar , inlen : usize , out : * mut :: std :: os :: raw :: c_uchar) -> usize ; }
extern "C" { pub fn cpuini (cpuisa : :: std :: os :: raw :: c_uint) -> :: std :: os :: raw :: c_uint ; }
extern "C" { pub fn cpustr (cpuisa : :: std :: os :: raw :: c_uint) -> * mut :: std :: os :: raw :: c_char ; }
